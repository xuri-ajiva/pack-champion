using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace unPack2 {
    class strings {
        public const string resource_begin = "<?xml version=\"1.0\" encoding=\"utf-8\"?><root>  <xsd:schema id=\"root\" xmlns=\"\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:msdata=\"urn:schemas-microsoft-com:xml-msdata\"><xsd:import namespace=\"http://www.w3.org/XML/1998/namespace\" /><xsd:element name=\"root\" msdata:IsDataSet=\"true\">  <xsd:complexType><xsd:choice maxOccurs=\"unbounded\">  <xsd:element name=\"metadata\"><xsd:complexType>  <xsd:sequence><xsd:element name=\"value\" type=\"xsd:string\" minOccurs=\"0\" />  </xsd:sequence>  <xsd:attribute name=\"name\" use=\"required\" type=\"xsd:string\" />  <xsd:attribute name=\"type\" type=\"xsd:string\" />  <xsd:attribute name=\"mimetype\" type=\"xsd:string\" />  <xsd:attribute ref=\"xml:space\" /></xsd:complexType>  </xsd:element>  <xsd:element name=\"assembly\"><xsd:complexType>  <xsd:attribute name=\"alias\" type=\"xsd:string\" />  <xsd:attribute name=\"name\" type=\"xsd:string\" /></xsd:complexType>  </xsd:element>  <xsd:element name=\"data\"><xsd:complexType>  <xsd:sequence><xsd:element name=\"value\" type=\"xsd:string\" minOccurs=\"0\" msdata:Ordinal=\"1\" /><xsd:element name=\"comment\" type=\"xsd:string\" minOccurs=\"0\" msdata:Ordinal=\"2\" />  </xsd:sequence>  <xsd:attribute name=\"name\" type=\"xsd:string\" use=\"required\" msdata:Ordinal=\"1\" />  <xsd:attribute name=\"type\" type=\"xsd:string\" msdata:Ordinal=\"3\" />  <xsd:attribute name=\"mimetype\" type=\"xsd:string\" msdata:Ordinal=\"4\" />  <xsd:attribute ref=\"xml:space\" /></xsd:complexType>  </xsd:element>  <xsd:element name=\"resheader\"><xsd:complexType>  <xsd:sequence><xsd:element name=\"value\" type=\"xsd:string\" minOccurs=\"0\" msdata:Ordinal=\"1\" />  </xsd:sequence>  <xsd:attribute name=\"name\" type=\"xsd:string\" use=\"required\" /></xsd:complexType>  </xsd:element></xsd:choice>  </xsd:complexType></xsd:element>  </xsd:schema>  <resheader name=\"resmimetype\"><value>text/microsoft-resx</value>  </resheader>  <resheader name=\"version\"><value>2.0</value>  </resheader>  <resheader name=\"reader\"><value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>  </resheader>  <resheader name=\"writer\"><value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>  </resheader>  <assembly alias=\"System.Windows.Forms\" name=\"System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\r\n\r\n <!-- /////////////////////< YOR CUSTOM PATH >///////////////////// -->\r\n";
        public const string resource_mid = "  <data name=\"_&\" type=\"System.Resources.ResXFileRef, System.Windows.Forms\"><value>%;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>  </data>";
        public const string resource_end = "\r\n<!-- /////////////////////< YOR CUSTOM PATH END >///////////////////// -->\r\n\r\n</root>";
        public const string resourcs_begin = "namespace unPack2 {using System;\t[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Resources.Tools.StronglyTypedResourceBuilder\", \"16.0.0.0\")][global::System.Diagnostics.DebuggerNonUserCodeAttribute()][global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]internal class Resource1 {private static global::System.Resources.ResourceManager resourceMan;private static global::System.Globalization.CultureInfo resourceCulture;[global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute(\"Microsoft.Performance\", \"CA1811:AvoidUncalledPrivateCode\")]internal Resource1() {}[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]internal static global::System.Resources.ResourceManager ResourceManager {get {if (object.ReferenceEquals(resourceMan, null)) {global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager(\"unPack2.Resource1\", typeof(Resource1).Assembly);resourceMan = temp;}return resourceMan;}}   [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]internal static global::System.Globalization.CultureInfo Culture {get {return resourceCulture;}set {resourceCulture = value;}}\r\n\r\n /////////////////////< YOR CUSTOM PATH >/////////////////////\r\n";
        public const string resourcs_mid = "internal static byte[] _& {get {object obj = ResourceManager.GetObject(\"_&\", resourceCulture);return ((byte[])(obj));}}";
        public const string resourcs_end = "\r\n/////////////////////< YOR CUSTOM PATH END >/////////////////////\r\n\r\n}}";
        public const string program_begin = "using System.IO;using System.Resources;using System.Collections.Generic;using System.Diagnostics;namespace unPack2 {class Program {static void Main(string[] args) {string TMP = Path.GetTempPath() + \"_\\\\\"; List<string> res = new List<string>();Directory.CreateDirectory(TMP);\r\n\r\n /////////////////////< YOR CUSTOM PATH >/////////////////////\r\n";
        public const string program_mid = "File.WriteAllBytes(TMP + \"%\",Resource1._&);";
        public const string program_exe = "res.Add(@\"&\");";
        public const string program_end = "\r\n/////////////////////< YOR CUSTOM PATH END >/////////////////////\r\n\r\nforeach (var i in res) {var px = new Process();px.StartInfo = new ProcessStartInfo(TMP + \"\\\\\"+ i);px.StartInfo.UseShellExecute = true;px.Start();}}}}";
    }
}
